geom_point(alpha=0.5) +
scale_size(range = c(10, 20)) +
theme_classic() +
theme(legend.position = "right") +
geom_text_repel(aes(label = Description), size = 2, vjust = 0,max.overlaps = 100) +
scale_color_manual(values = c("#98B85D","#AC667E","#B395BD","#287c9e","#a9a9a9","#e29578")) +
xlim(-1,8)+
ylim(-10,0)
# plot bubble GO
ggplot(result_df, aes(x=Count, y=log10(pvalue), size = GeneRatio, color = name)) +
geom_point(alpha=0.5) +
scale_size(range = c(10, 20)) +
theme_classic() +
theme(legend.position = "right") +
geom_text_repel(aes(label = Description), size = 2, vjust = 0,max.overlaps = 100) +
scale_color_manual(values = c("#98B85D","#AC667E","#B395BD","#287c9e","#a9a9a9","#e29578")) +
xlim(-1,9)+
ylim(-10,0)
ggsave("/Users/lubeifang/Desktop/RS15210_GO.pdf",width = 11,height=5)
# RS21375 mutant deg analysis
deg1 <- read.csv("/Users/lubeifang/Desktop/Kleb_dap/mutant/deg/Mu21375_mid_DEG.csv")
deg2 <- read.csv("/Users/lubeifang/Desktop/Kleb_dap/mutant/deg/Mu21375_stat_DEG.csv")
deg <- bind_rows(deg1,deg2)
same_deg <- merge(deg1[deg1$Gene.Type == "protein-coding"| deg1$Gene.Type == "pseudogene",][,c(1,3)],deg2[deg2$Gene.Type == "protein-coding"| deg2$Gene.Type == "pseudogene",][,c(1,3,17,18)],by="Row.names")
length(unique(c(deg1[deg1$Gene.Type == "protein-coding"| deg1$Gene.Type == "pseudogene",]$Row.names, deg2[deg2$Gene.Type == "protein-coding"| deg2$Gene.Type == "pseudogene",]$Row.names)))
count <- data.frame(cate = c("1same", "2up_down", "3down_up"),
num = c(nrow(same_deg[same_deg$log2FoldChange.x * same_deg$log2FoldChange.y > 0,]),
nrow(same_deg[same_deg$log2FoldChange.x > 0 & same_deg$log2FoldChange.y < 0,]),
nrow(same_deg[same_deg$log2FoldChange.x < 0 & same_deg$log2FoldChange.y > 0,])))
length(unique(c(deg1[deg1$Gene.Type == "protein-coding"| deg1$Gene.Type == "pseudogene",]$Row.names, deg2[deg2$Gene.Type == "protein-coding"| deg2$Gene.Type == "pseudogene",]$Row.names)))
# PLOT venn
ggVennDiagram(
x = list(
"Stationary" = deg2[deg2$Gene.Type == "protein-coding"| deg2$Gene.Type == "pseudogene",]$Row.names,
"Mid-log" = deg1[deg1$Gene.Type == "protein-coding"| deg1$Gene.Type == "pseudogene",]$Row.names),
cex = 2.5,
cat.cex = 2.5,
label_alpha = 0, edge_size = 0.3, label = "count"
) +
scale_fill_gradient(low="white",high = "#C6AEBA") +
theme(legend.position = "none")
# PLOT bar
ggplot(count,aes(x=cate,y=num,fill=cate)) +
geom_bar(stat="identity", width = 0.5) +
scale_fill_brewer(palette = "Greys") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle=45,vjust = 1,hjust=1)) +
ylab("") +
xlab("") +
geom_text(aes(label = num), vjust = -0.5, size = 3)
# Whether TF inside?
temp<-merge(TF_pfam,deg,by.x="Gene",by.y="Row.names")
peak1 <- read.csv(paste0("/Users/lubeifang/Desktop/Kleb_dap/peaks/annotated_peak/RS21375.csv"))
peak2 <- read.csv(paste0("/Users/lubeifang/Desktop/Kleb_dap/peaks/annotated_peak_plasmid/RS21375.csv"))
colnames(peak2) <- colnames(peak1)
peak <- rbind(peak1,peak2)[,c(1:9,22,27)]
regulon_num = length(unique(merge(deg,peak,by.x="Row.names",by.y="feature")$Row.names))
regulon_pro_num = length(unique(merge(deg,peak[peak$insideFeature == "overlapStart" | peak$insideFeature == "upstream", ],by.x="Row.names",by.y="feature")$Row.names))
# Whether TF inside?
temp<-merge(TF_pfam,deg,by.x="Gene",by.y="Row.names")
temp <- temp[,c(1,3,21,20)]
length(unique(temp$Gene))
temp<-merge(temp,regulon_df[grepl("Mu21375", regulon_df$mu),][,c(1,2)],by.x="Gene",by.y="Row.names")
length(unique(temp$Gene))
# Analyze the GO of different gene set
go_list <- data.frame()
expressions <- c(
"setdiff(deg1$Row.name, deg2$Row.name)",
"same_deg$Row.name",
"setdiff(deg2$Row.name, deg1$Row.name)",
"same_deg[same_deg$log2FoldChange.x * same_deg$log2FoldChange.y > 0,]$Row.name",
"same_deg[same_deg$log2FoldChange.x > 0 & same_deg$log2FoldChange.y < 0,]$Row.name",
"same_deg[same_deg$log2FoldChange.x <0 & same_deg$log2FoldChange.y > 0,]$Row.name"
)
for (expr in expressions) {
gene_list <- eval(parse(text = expr))
print(paste("Processing:", expr))
GO <- enricher(gene_list,
TERM2GENE = gene2go[, c(2,1)],
TERM2NAME = go2term,
pvalueCutoff = 0.05)
if (is.null(GO)){
next
}
df <- data.frame(name = expr, as.data.frame(GO@result))
go_list <- rbind(go_list, df)
}
for (expr in expressions) {
gene_list <- eval(parse(text = expr))
print(paste("Processing:", expr))
GO <- enricher(gene_list,
TERM2GENE = gene2go[, c(2,1)],
TERM2NAME = go2term,
pvalueCutoff = 0.05)
if (is.null(GO)){
next
}
df <- data.frame(name = expr, as.data.frame(GO@result))
go_list <- rbind(go_list, df)
}
result_df <- go_list %>%
group_by(name) %>%
arrange(pvalue) %>%
slice_head(n = 3) %>%
ungroup()
result_df <- go_list %>%
group_by(name) %>%
arrange(pvalue) %>%
slice_head(n = 3) %>%
ungroup()
result_df$GeneRatio <- sapply(result_df$GeneRatio , convert_to_decimal)
# plot bubble GO
ggplot(result_df, aes(x=Count, y=log10(pvalue), size = GeneRatio, color = name)) +
geom_point(alpha=0.5) +
scale_size(range = c(10, 20)) +
theme_classic() +
theme(legend.position = "right") +
geom_text_repel(aes(label = Description), size = 2, vjust = 0,max.overlaps = 100) +
scale_color_manual(values = c("#98B85D","#B395BD","#287c9e","#a9a9a9","#e29578")) +
xlim(0,8)+
ylim(-6,0)
ggplot(result_df, aes(x=Count, y=log10(pvalue), size = GeneRatio, color = name)) +
geom_point(alpha=0.5) +
scale_size(range = c(10, 20)) +
theme_classic() +
theme(legend.position = "right") +
geom_text_repel(aes(label = Description), size = 2, vjust = 0,max.overlaps = 100) +
scale_color_manual(values = c("#98B85D","#B395BD","#287c9e","#a9a9a9","#e29578"))
# plot bubble GO
ggplot(result_df, aes(x=Count, y=log10(pvalue), size = GeneRatio, color = name)) +
geom_point(alpha=0.5) +
scale_size(range = c(10, 20)) +
theme_classic() +
theme(legend.position = "right") +
geom_text_repel(aes(label = Description), size = 2, vjust = 0,max.overlaps = 100) +
scale_color_manual(values = c("#98B85D","#B395BD","#287c9e","#a9a9a9","#e29578")) +
xlim(0,3)+
ylim(-4,-1)
ggsave("/Users/lubeifang/Desktop/RS21375_GO.pdf",width = 11,height=5)
# all 6mA site as ground turth
k12_motif1 = read.csv("/Users/lubeifang/Desktop/DNAglori/ref/k12_GATC.bed", sep="\t",header = F)
k12_motif2 = read.csv("/Users/lubeifang/Desktop/DNAglori/ref/k12_GCACNNNNNNGTT.bed", sep="\t",header = F)
k12_motif3 = read.csv("/Users/lubeifang/Desktop/DNAglori/ref/k12_AACNNNNNNGTGC.bed", sep="\t",header = F)
k12_motif <- rbind(k12_motif1,k12_motif2,k12_motif3)[,c(1,3,6)]
rm(k12_motif1,k12_motif2,k12_motif3)
colnames(k12_motif) <- c("Chromosome","Position","Strand")
duplicated_rows <- duplicated(k12_motif)
k12_motif <- k12_motif[!duplicated_rows,]
file.list <- list.files("/Users/lubeifang/Desktop/DNAglori/results/trail2/deep/", pattern = "txt.csv", full.names = TRUE)
result <- data.frame()
for (file in file.list){
print(file)
treat <- read.csv(file, sep = "")
A <- strsplit(file, "\\D+")[[1]][6]
result <- rbind(result,data.frame(name = file,
sites = length(treat$Sites),
A_cutoff = as.numeric(A),
positives = length(intersect(treat$Sites,k12_motif$Position)),
acc = length(intersect(treat$Sites,k12_motif$Position))/length(treat$Sites),
TPR = length(intersect(treat$Sites,k12_motif$Position))/length(k12_motif$Position)))
}
View(result)
p1 <- ggplot(result[c(1:17),], aes(x = A_cutoff, y = sites)) +
geom_line() +
theme_bw() +
labs(title = "Number 6mA called in treat-2", x = "A_cutoff", y = "sites_number")
p2 <- ggplot(result[c(1:17),], aes(x = A_cutoff, y = acc)) +
geom_line() +
theme_bw() +
labs(title = "Accuracy in treat-2", x = "A_cutoff", y = "Accuracy")
p1 + p2
treat <- read.csv("/Users/lubeifang/Desktop/DNAglori/results/trail2/deep/treat-2_L1.m6Acaller.sites.20.FDR.txt.csv",sep="")
ggVennDiagram(list(treat = treat2$Sites, ground_truth = k12_motif$Position ),
label_alpha = 0, edge_size = 0.3, label = "count") +
scale_fill_gradient(low="white",high = "#B6C7D1") +
theme(legend.position = "none") +
labs(title = "Venn Diagram of 6mA sites in different treatments")
ggVennDiagram(list(treat = treat$Sites, ground_truth = k12_motif$Position ),
label_alpha = 0, edge_size = 0.3, label = "count") +
scale_fill_gradient(low="white",high = "#B6C7D1") +
theme(legend.position = "none") +
labs(title = "Venn Diagram of 6mA sites in different treatments")
depth1<-read.csv("/Users/lubeifang/Desktop/DNAglori/results/trail2/treat-2_L4.m6Acaller.output",sep="",header = F,skip = 9)
depth2<-read.csv("/Users/lubeifang/Desktop/DNAglori/results/trail2/deep/treat-2_L1.m6Acaller.output",sep="",header = F,skip = 9)
uncalled <- k12_motif
colnames(uncalled) <- c("Chromosome","Sites","Strand")
uncalled <- anti_join(uncalled, treat, by = c("Sites","Strand"))
colnames(uncalled) <- c("Chromosome","V2","V3")
uncalled_depth1 <- semi_join(depth1[,c(1,2,3,9)],uncalled, by = c("V2", "V3"))
uncalled_depth2 <- semi_join(depth2[,c(1,2,3,9)],uncalled, by = c("V2", "V3"))
ggplot() +
geom_density(data = uncalled_depth1, aes(x = V9, fill = "Uncalled_lowdepth"), alpha = 0.5) +
geom_density(data = uncalled_depth2, aes(x = V9, fill = "Uncalled_highdepth"), alpha = 0.5) +
geom_density(data = called_depth, aes(x = AGcov, fill = "Called"), alpha = 0.5) +
scale_fill_manual(values = c("Uncalled_lowdepth" = "blue", "Uncalled_highdepth" = "green","Called" = "red"))
View(treat)
called <- treat[,c(1,2,3)]
colnames(called) <- c("Chromosome","V2","V3")
called_depth <- semi_join(depth1[,c(1,2,3,9)],treat, by = c("V2", "V3"))
View(called)
View(depth2)
called_depth <- semi_join(depth1[,c(1,2,3,9)],called, by = c("V2", "V3"))
called_depth1 <- semi_join(depth1[,c(1,2,3,9)],called, by = c("V2", "V3"))
called_depth2 <- semi_join(depth2[,c(1,2,3,9)],called, by = c("V2", "V3"))
uncalled_depth1 <- semi_join(depth1[,c(1,2,3,9)],uncalled, by = c("V2", "V3"))
uncalled_depth2 <- semi_join(depth2[,c(1,2,3,9)],uncalled, by = c("V2", "V3"))
ggplot() +
geom_density(data = uncalled_depth1, aes(x = V9, fill = "Uncalled_lowdepth"), alpha = 0.5) +
geom_density(data = uncalled_depth2, aes(x = V9, fill = "Uncalled_highdepth"), alpha = 0.5) +
geom_density(data = called_depth1, aes(x = AGcov, fill = "Called_lowdepth"), alpha = 0.5) +
geom_density(data = called_depth2, aes(x = AGcov, fill = "Called_highdepth"), alpha = 0.5) +
scale_fill_manual(values = c("Uncalled_lowdepth" = "lightblue", "Uncalled_highdepth" = "lightgreen","Uncalled_lowdepth" = "pink", "Uncalled_highdepth" = "grey"))
View(uncalled_depth1)
ggplot() +
geom_density(data = uncalled_depth1, aes(x = V9, fill = "Uncalled_lowdepth"), alpha = 0.5) +
geom_density(data = uncalled_depth2, aes(x = V9, fill = "Uncalled_highdepth"), alpha = 0.5) +
geom_density(data = called_depth, aes(x = AGcov, fill = "Called_highdepth"), alpha = 0.5) +
# geom_density(data = called_depth2, aes(x = AGcov, fill = "Called_highdepth"), alpha = 0.5) +
scale_fill_manual(values = c("Uncalled_lowdepth" = "lightblue", "Uncalled_highdepth" = "lightgreen", "Uncalled_highdepth" = "grey"))
View(called_depth)
View(called_depth1)
ggplot() +
geom_density(data = uncalled_depth1, aes(x = V9, fill = "Uncalled_lowdepth"), alpha = 0.5) +
geom_density(data = uncalled_depth2, aes(x = V9, fill = "Uncalled_highdepth"), alpha = 0.5) +
geom_density(data = called_depth, aes(x = V9, fill = "Called_lowdepth"), alpha = 0.5) +
geom_density(data = called_depth2, aes(x =V9, fill = "Called_highdepth"), alpha = 0.5) +
scale_fill_manual(values = c("Uncalled_lowdepth" = "lightblue", "Uncalled_highdepth" = "lightgreen","Uncalled_lowdepth" = "pink", "Uncalled_highdepth" = "grey"))
ggplot() +
geom_density(data = uncalled_depth1, aes(x = V9, fill = "Uncalled_lowdepth"), alpha = 0.5) +
geom_density(data = uncalled_depth2, aes(x = V9, fill = "Uncalled_highdepth"), alpha = 0.5) +
geom_density(data = called_depth, aes(x = V9, fill = "Called_lowdepth"), alpha = 0.5) +
geom_density(data = called_depth2, aes(x =V9, fill = "Called_highdepth"), alpha = 0.5) +
scale_fill_manual(values = c("Uncalled_lowdepth" = "lightblue", "Uncalled_highdepth" = "lightgreen","Called_lowdepth" = "pink", "Called_highdepth" = "grey"))
ggplot() +
geom_density(data = uncalled_depth1, aes(x = V9, fill = "Uncalled_lowdepth"), alpha = 0.9) +
geom_density(data = uncalled_depth2, aes(x = V9, fill = "Uncalled_highdepth"), alpha = 0.9) +
geom_density(data = called_depth, aes(x = V9, fill = "Called_lowdepth"), alpha = 0.9) +
geom_density(data = called_depth2, aes(x =V9, fill = "Called_highdepth"), alpha = 0.9) +
scale_fill_manual(values = c("Uncalled_lowdepth" = "lightblue", "Uncalled_highdepth" = "lightgreen","Called_lowdepth" = "pink", "Called_highdepth" = "grey"))
file.list <- list.files("/Users/lubeifang/Desktop/DNAglori/results/trail2/deep/", pattern = "txt.csv", full.names = TRUE)
result <- data.frame()
for (file in file.list){
print(file)
treat <- read.csv(file, sep = "")
A <- strsplit(file, "\\D+")[[1]][6]
result <- rbind(result,data.frame(name = file,
sites = length(treat$Sites),
A_cutoff = as.numeric(A),
positives = length(intersect(treat$Sites,k12_motif$Position)),
acc = length(intersect(treat$Sites,k12_motif$Position))/length(treat$Sites),
TPR = length(intersect(treat$Sites,k12_motif$Position))/length(k12_motif$Position)))
}
View(result)
treat <- read.csv("/Users/lubeifang/Desktop/DNAglori/results/trail2/deep/treat-2_L1.m6Acaller.sites.20.FDRc5.txt.csv",sep="")
ggVennDiagram(list(treat = treat$Sites, ground_truth = k12_motif$Position ),
label_alpha = 0, edge_size = 0.3, label = "count") +
scale_fill_gradient(low="white",high = "#B6C7D1") +
theme(legend.position = "none") +
labs(title = "Venn Diagram of 6mA sites in different treatments")
treat <- read.csv("/Users/lubeifang/Desktop/DNAglori/results/trail2/deep/treat-2_L1.m6Acaller.sites.20.txt",sep="",header = F)
View(treat)
ggVennDiagram(list(treat = treat$V2, ground_truth = k12_motif$Position ),
label_alpha = 0, edge_size = 0.3, label = "count") +
scale_fill_gradient(low="white",high = "#B6C7D1") +
theme(legend.position = "none") +
labs(title = "Venn Diagram of 6mA sites in different treatments")
rm(list=ls())
library(dplyr)
library(ggplot2)
library(patchwork)
blast=read.csv("/Users/lubeifang/Desktop/Kleb_dap/files/kp_results.txt", sep = "\t", header = F)
blast$V1 <- sapply(strsplit(blast$V1, ":"), `[`, 1)
colnames(blast) = c("Query_id","Subject_id","Identity","Align_length","Miss_match",
"Gap","Query_start","Query_end","Subject_start","Subject_end","E_value","Score")
length(unique(blast$Subject_id))
blast_f <-arrange(blast, desc(Score)) %>%
distinct(Query_id, Subject_id, .keep_all = T)
blast_f <- blast_f[blast_f$Identity >= 99 & blast_f$E_value <= 0.001,]
ncbi <- read.csv("/Users/lubeifang/Desktop/Kleb_dap/geo/ncbi_dataset.tsv", sep = "\t", header = T)
geo <- read.csv("/Users/lubeifang/Desktop/Kleb_dap/geo/extracted_biosample_info.csv")
geo <- merge(ncbi[,c(1,3,17)],geo[,c(1,2)],by.x="Assembly.BioSample.Accession",by.y="BioSample")
name <- read.csv("/Users/lubeifang/Desktop/Kleb_dap/geo/2058_kps.csv")
name <- merge(name[,c(1:3)],geo,by.x="refseq",by.y="Assembly.Accession",all.x=T)
name$Geographic.Location <- ifelse(is.na(name$Geographic.Location), "no_info",name$Geographic.Location)
blast_f <- merge(blast_f,name[,c(1,2,6)],by.x="Subject_id",by.y="chr")
length(unique(blast_f$Subject_id))
length(unique(blast_f$Query_id))
st <- read.csv("/Users/lubeifang/Desktop/Kleb_dap/geo/kleborate_out.txt", sep = "\t", header = T,skip = 1,)
st <- st[st$species == "Klebsiella pneumoniae",]
# setdiff(name$refseq,st$strain)
st_count <- data.frame(table(st$ST))
st_count$st <- ifelse(st_count$Freq <= 10, "others", as.character(st_count$Var1))
st <- merge(st,st_count,by.x="ST",by.y="Var1")
st <- merge(st,geo,by.x="strain",by.y="Assembly.Accession",all.x=T)
st$Geographic.Location <- ifelse(is.na(st$Geographic.Location), "no_info",st$Geographic.Location)
country_count <- data.frame(table(st$Geographic.Location))
country_count$geo <- ifelse(country_count$Freq < 10, "others", as.character(country_count$Var1))
st <- merge(st,country_count,by.x="Geographic.Location",by.y="Var1")
blast_g <- merge(blast_f,st[,c(2,3,6,7,11,15)],by.x="refseq",by.y="strain")
View(st)
View(blast_g)
ggplot(blast_g, aes(x=Query_id, y=Subject_id, fill= Identity)) +
scale_fill_gradientn(colors = rev(hcl.colors(10, "YlGnBu"))) +
geom_tile()+
theme_classic()+
theme(
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("370 TFs") +
ylab("2058 KP strains")
ggplot(blast_g, aes(x=Query_id, y=Subject_id, fill= Identity)) +
geom_density2d_filled()+
theme_classic()+
theme(
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("370 TFs") +
ylab("2058 KP strains")
ggplot(blast_g, aes(x=st, y= Identity)) +
geom_density2d_filled()+
theme_classic()+
theme(
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("370 TFs") +
ylab("2058 KP strains")
ggplot(blast_g, aes(x=st, y=Identity)) +
geom_density()+
theme_classic()+
theme(
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("370 TFs") +
ylab("2058 KP strains")
ggplot(blast_g, aes(x=st, y=Identity)) +
geom_density()+
theme_bw()+
theme(
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("370 TFs") +
ylab("2058 KP strains")
ggsave("/Users/lubeifang/Desktop/Kleb_dap/Figure/Figure6/st_identity.pdf",width = 12, height = 3)
ggplot(blast_g, aes(x=st, y=Identity)) +
geom_density()+
theme_bw()+
theme(
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab("370 TFs") +
ylab("2058 KP strains")
ggplot(blast_g, aes(x=st, y=Identity)) +
geom_density()+
theme_bw()+
theme(
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA)) +
xlab("370 TFs") +
ylab("2058 KP strains")
ggplot(blast_g, aes(x=st, y=Identity)) +
geom_violin(width=3,drop = FALSE,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1))
ggplot(blast_g, aes(x=st, y=Identity)) +
geom_violin(width=1,drop = FALSE,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1))
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = FALSE,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1))
View(st_count)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = FALSE,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,label=Freq), vjust=-0.3) +
ggsave("/Users/lubeifang/Desktop/Kleb_dap/Figure/Figure6/st_identity.pdf",width = 12, height = 3)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = FALSE,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,y=max(blast_g$Identity) + 1,label=Freq), vjust=-0.3) +
ggsave("/Users/lubeifang/Desktop/Kleb_dap/Figure/Figure6/st_identity.pdf",width = 12, height = 3)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = FALSE,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,y=max(blast_g$Identity) + 1,label=Freq), vjust=-0.3)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = FALSE,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,y=max(blast_g$Identity) + 0.01,label=Freq), vjust=-0.3)
ggsave("/Users/lubeifang/Desktop/Kleb_dap/Figure/Figure6/st_identity.pdf",width = 12, height = 3)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,y=max(blast_g$Identity) + 0.01,label=Freq), vjust=-0.3)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = T,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,y=max(blast_g$Identity) + 0.01,label=Freq), vjust=-0.3)
st_count$label <- paste0("n=",st_count$Freq)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = T,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,y=max(blast_g$Identity) + 0.01,label=label), vjust=-0.3)
ggplot(blast_g, aes(x=st, y=Identity, fill=st)) +
geom_violin(width=1,drop = T,color=NA) +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45,vjust=1,hjust=1)) +
geom_text(data = st_count,aes(x=st,y=99,label=label), vjust=-0.3)
ggsave("/Users/lubeifang/Desktop/Kleb_dap/Figure/Figure6/st_identity.pdf",width = 12, height = 3)
ggsave("/Users/lubeifang/Desktop/Kleb_dap/Figure/Figure6/st_identity.pdf",width = 15, height = 3)
geo_st <- st %>%
subset(geo!="others"&geo!="no_info"&st!="others") %>%
group_by(geo) %>%
summarise(st_Set = list(unique(st))) %>%
ungroup()
unique_st <- geo_st %>%
mutate(Unique_st = lapply(st_Set, function(st_set, all_sets) {
other_sets <- setdiff(all_sets, list(st_set))
other_sts <- unique(unlist(other_sets))
setdiff(st_set, other_sts)
}, all_sets = geo_st$st_Set)) %>%
mutate(
st_Set = sapply(st_Set, function(x) paste(x, collapse = ",")),
Unique_st = sapply(Unique_st, function(x) paste(x, collapse = ",")),
num = sapply(st_Set, length)
) %>%
mutate(
num = sapply(st_Set, function(x) length(unlist(strsplit(x, ","))))
)
View(geo_st)
location_distribution <- st %>%
group_by(geo, st) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(geo) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
View(location_distribution)
View(location_distribution)
View(country_count)
